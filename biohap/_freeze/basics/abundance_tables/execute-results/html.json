{
  "hash": "17aaa1f3b520b615b78aeef2261eec96",
  "result": {
    "engine": "jupyter",
    "markdown": "\n\n---\ndate: 05/05/2025\nauthor: David Paleček [dpalecek@ualg.pt](mailto:dpalecek@ualg.pt)\njupyter: python3\nformat:\n  html:\n    code-fold: true\nexecute:\n  freeze: true\ntitle: Abundance table preprocessing\n---\n\n\n\n**Work in progress**\n\nThis is a personal commitment to understand the effect (variance) of abundance table normalization and scaling methods on downstream tasks, which may be differential analysis etc.\n\n::: {.callout-note collapse=\"true\" title=\"TODO\"}\nCompare R based methods to the python ones.\n:::\n\nMost well-known packages have the normalization methods implemented so raw data tables can be supplied to them, such as QIIME2 or refseq. For EMO-BON analysis, I do not use those (might be a mistake, because of bug risks), so I need to understand them properly.\n\nLoad SSU combined taxonomy from 181 EMO-BON samplings.\n\n::: {#0d3becbe .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport numpy as np\nfrom skbio.diversity import beta_diversity\n\n#| code-fold: false\n# read the data from github\nssu_url = \"https://github.com/emo-bon/momics-demos/raw/refs/heads/main/data/parquet_files/metagoflow_analyses.SSU.parquet\"\n\nssu = pd.read_parquet(ssu_url)\n\n# change abundance to int\nssu['abundance'] = ssu['abundance'].astype(int)\nssu.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=1}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>ref_code</th>\n      <th>ncbi_tax_id</th>\n      <th>abundance</th>\n      <th>superkingdom</th>\n      <th>kingdom</th>\n      <th>phylum</th>\n      <th>class</th>\n      <th>order</th>\n      <th>family</th>\n      <th>genus</th>\n      <th>species</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>EMOBON00084</td>\n      <td>2157</td>\n      <td>7</td>\n      <td>Archaea</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>EMOBON00084</td>\n      <td>1801616</td>\n      <td>1</td>\n      <td>Archaea</td>\n      <td></td>\n      <td>Candidatus_Woesearchaeota</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>EMOBON00084</td>\n      <td>28890</td>\n      <td>1</td>\n      <td>Archaea</td>\n      <td></td>\n      <td>Euryarchaeota</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>EMOBON00084</td>\n      <td>183968</td>\n      <td>1</td>\n      <td>Archaea</td>\n      <td></td>\n      <td>Euryarchaeota</td>\n      <td>Thermococci</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>EMOBON00084</td>\n      <td>192989</td>\n      <td>3</td>\n      <td>Archaea</td>\n      <td></td>\n      <td>Nanoarchaeota</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nLet's order them by abundance\n\n::: {#4436fe7f .cell execution_count=2}\n``` {.python .cell-code}\nssu.sort_values(by='abundance', inplace=True, ascending=False)\n\nssu\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>ref_code</th>\n      <th>ncbi_tax_id</th>\n      <th>abundance</th>\n      <th>superkingdom</th>\n      <th>kingdom</th>\n      <th>phylum</th>\n      <th>class</th>\n      <th>order</th>\n      <th>family</th>\n      <th>genus</th>\n      <th>species</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>9377</th>\n      <td>EMOBON00009</td>\n      <td>1236</td>\n      <td>26938</td>\n      <td>Bacteria</td>\n      <td></td>\n      <td>Proteobacteria</td>\n      <td>Gammaproteobacteria</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>9014</th>\n      <td>EMOBON00010</td>\n      <td>1236</td>\n      <td>26431</td>\n      <td>Bacteria</td>\n      <td></td>\n      <td>Proteobacteria</td>\n      <td>Gammaproteobacteria</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>10691</th>\n      <td>EMOBON00008</td>\n      <td>1236</td>\n      <td>14402</td>\n      <td>Bacteria</td>\n      <td></td>\n      <td>Proteobacteria</td>\n      <td>Gammaproteobacteria</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>68804</th>\n      <td>EMOBON00125</td>\n      <td>54526</td>\n      <td>13108</td>\n      <td>Bacteria</td>\n      <td></td>\n      <td>Proteobacteria</td>\n      <td>Alphaproteobacteria</td>\n      <td>Pelagibacterales</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>17321</th>\n      <td>EMOBON00003</td>\n      <td>72037</td>\n      <td>12545</td>\n      <td>Eukaryota</td>\n      <td>Metazoa</td>\n      <td>Arthropoda</td>\n      <td>Hexanauplia</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>76710</th>\n      <td>EMOBON00228</td>\n      <td>12916</td>\n      <td>1</td>\n      <td>Bacteria</td>\n      <td></td>\n      <td>Proteobacteria</td>\n      <td>Betaproteobacteria</td>\n      <td>Burkholderiales</td>\n      <td>Comamonadaceae</td>\n      <td>Acidovorax</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>76708</th>\n      <td>EMOBON00228</td>\n      <td>48736</td>\n      <td>1</td>\n      <td>Bacteria</td>\n      <td></td>\n      <td>Proteobacteria</td>\n      <td>Betaproteobacteria</td>\n      <td>Burkholderiales</td>\n      <td>Burkholderiaceae</td>\n      <td>Ralstonia</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>76702</th>\n      <td>EMOBON00228</td>\n      <td>1381133</td>\n      <td>1</td>\n      <td>Bacteria</td>\n      <td></td>\n      <td>Proteobacteria</td>\n      <td>Betaproteobacteria</td>\n      <td></td>\n      <td></td>\n      <td>Candidatus_Profftella</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>76698</th>\n      <td>EMOBON00228</td>\n      <td>165695</td>\n      <td>1</td>\n      <td>Bacteria</td>\n      <td></td>\n      <td>Proteobacteria</td>\n      <td>Alphaproteobacteria</td>\n      <td>Sphingomonadales</td>\n      <td>Sphingomonadaceae</td>\n      <td>Sphingobium</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>76694</th>\n      <td>EMOBON00228</td>\n      <td>418853</td>\n      <td>1</td>\n      <td>Bacteria</td>\n      <td></td>\n      <td>Proteobacteria</td>\n      <td>Alphaproteobacteria</td>\n      <td>Sneathiellales</td>\n      <td>Sneathiellaceae</td>\n      <td>Sneathiella</td>\n      <td>Sneathiella_glossodoripedis</td>\n    </tr>\n  </tbody>\n</table>\n<p>111320 rows × 11 columns</p>\n</div>\n```\n:::\n:::\n\n\n## Total Sum Scaling (TSS) followed by Square Root Transformation\n\n### TSS\n\n- converts raw counts into relative abundances, alternative name Relative Abundance Normalization. Simple division by sum of abundances in each sample separately.\n- Purpose: Adjusts for varying sequencing depths between samples.\n- [reference](https://doi.org/10.1371/journal.pcbi.1003531), McMurdie, P. J., & Holmes, S. (2014). Waste not, want not: why rarefying microbiome data is inadmissible. PLoS computational biology, 10(4), e1003531.\n\n### Square root transformation to relative abundances\n\n- This is a variance-stabilizing transformation — it reduces the effect of highly abundant taxa and improves comparability across samples.\n- It’s commonly used before distance-based analyses like Bray–Curtis dissimilarity or ordination (e.g., NMDS, PCoA).\n- [reference](https://doi.org/10.1007/s004420100716), Legendre, P., & Gallagher, E. D. (2001). Ecologically meaningful transformations for ordination of species data. Oecologia, 129(2), 271–280.\n\nHere is a function to pivot the taxonomy:\n\n::: {#bcc84ac5 .cell execution_count=3}\n``` {.python .cell-code}\ndef pivot_taxonomic_data(df: pd.DataFrame, values_col='abundance') -> pd.DataFrame:\n    \"\"\"\n    Prepares the taxonomic data (LSU and SSU tables) for analysis.\n\n    Args:\n        df (pd.DataFrame): The input DataFrame containing taxonomic information.\n\n    Returns:\n        pd.DataFrame: A pivot table with taxonomic data.\n    \"\"\"\n    # Select relevant columns\n    df['taxonomic_concat'] = (\n        df['ncbi_tax_id'].astype(str) + \n        ';sk_' + df['superkingdom'].fillna('') + \n        ';k_' + df['kingdom'].fillna('') + \n        ';p_' + df['phylum'].fillna('') + \n        ';c_' + df['class'].fillna('') + \n        ';o_' + df['order'].fillna('') + \n        ';f_' + df['family'].fillna('') + \n        ';g_' + df['genus'].fillna('') + \n        ';s_' + df['species'].fillna('')\n    )\n    pivot_table = df.pivot_table(\n        index=['ncbi_tax_id','taxonomic_concat'], \n        columns='ref_code', \n        values=values_col,\n    ).fillna(0)\n    pivot_table = pivot_table.reset_index()\n    # change inex name\n    pivot_table.columns.name = None\n\n    return pivot_table\n```\n:::\n\n\n, and methods to calculate to apply various scaling and normalization methods:\n\n::: {#28849f4a .cell execution_count=4}\n``` {.python .cell-code code-fold=\"false\"}\ndef TSS(df, sampleIds='ref_code'):\n    \"\"\" Calculate TSS\"\"\"\n    df['abundance_TSS'] = df.groupby(sampleIds)['abundance'].transform(lambda x: x / x.sum())\n    return df\n```\n:::\n\n\n## Now I want to systematically transform and send downstream\n\nDownstream tasks are\n\n- Beta diversity\n- PCoA\n- ???\n\n::: {#422c5d07 .cell execution_count=5}\n``` {.python .cell-code code-fold=\"false\"}\nssu = TSS(ssu)\n\nassert ssu[ssu['ref_code'] == 'EMOBON00009']['abundance_TSS'].sum() == 1.0\nssu.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>ref_code</th>\n      <th>ncbi_tax_id</th>\n      <th>abundance</th>\n      <th>superkingdom</th>\n      <th>kingdom</th>\n      <th>phylum</th>\n      <th>class</th>\n      <th>order</th>\n      <th>family</th>\n      <th>genus</th>\n      <th>species</th>\n      <th>abundance_TSS</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>9377</th>\n      <td>EMOBON00009</td>\n      <td>1236</td>\n      <td>26938</td>\n      <td>Bacteria</td>\n      <td></td>\n      <td>Proteobacteria</td>\n      <td>Gammaproteobacteria</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n      <td>0.457989</td>\n    </tr>\n    <tr>\n      <th>9014</th>\n      <td>EMOBON00010</td>\n      <td>1236</td>\n      <td>26431</td>\n      <td>Bacteria</td>\n      <td></td>\n      <td>Proteobacteria</td>\n      <td>Gammaproteobacteria</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n      <td>0.458879</td>\n    </tr>\n    <tr>\n      <th>10691</th>\n      <td>EMOBON00008</td>\n      <td>1236</td>\n      <td>14402</td>\n      <td>Bacteria</td>\n      <td></td>\n      <td>Proteobacteria</td>\n      <td>Gammaproteobacteria</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n      <td>0.216178</td>\n    </tr>\n    <tr>\n      <th>68804</th>\n      <td>EMOBON00125</td>\n      <td>54526</td>\n      <td>13108</td>\n      <td>Bacteria</td>\n      <td></td>\n      <td>Proteobacteria</td>\n      <td>Alphaproteobacteria</td>\n      <td>Pelagibacterales</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n      <td>0.376753</td>\n    </tr>\n    <tr>\n      <th>17321</th>\n      <td>EMOBON00003</td>\n      <td>72037</td>\n      <td>12545</td>\n      <td>Eukaryota</td>\n      <td>Metazoa</td>\n      <td>Arthropoda</td>\n      <td>Hexanauplia</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n      <td>0.337676</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nCalculate and plot Beta diversity\n\n::: {#4cdbc8f4 .cell execution_count=6}\n``` {.python .cell-code}\nimport seaborn as sns\n\npivot = pivot_taxonomic_data(ssu, values_col='abundance_TSS')\nmetric = 'braycurtis'\npivot.head()\n\n```\n\n::: {.cell-output .cell-output-display execution_count=6}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>ncbi_tax_id</th>\n      <th>taxonomic_concat</th>\n      <th>EMOBON00001</th>\n      <th>EMOBON00003</th>\n      <th>EMOBON00004</th>\n      <th>EMOBON00005</th>\n      <th>EMOBON00006</th>\n      <th>EMOBON00007</th>\n      <th>EMOBON00008</th>\n      <th>EMOBON00009</th>\n      <th>...</th>\n      <th>EMOBON00242</th>\n      <th>EMOBON00243</th>\n      <th>EMOBON00244</th>\n      <th>EMOBON00245</th>\n      <th>EMOBON00246</th>\n      <th>EMOBON00247</th>\n      <th>EMOBON00248</th>\n      <th>EMOBON00249</th>\n      <th>EMOBON00250</th>\n      <th>EMOBON00251</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2</td>\n      <td>2;sk_Bacteria;k_;p_;c_;o_;f_;g_;s_</td>\n      <td>0.018025</td>\n      <td>0.017335</td>\n      <td>0.027319</td>\n      <td>0.047492</td>\n      <td>0.04602</td>\n      <td>0.069328</td>\n      <td>0.060912</td>\n      <td>0.00692</td>\n      <td>...</td>\n      <td>0.017378</td>\n      <td>0.013971</td>\n      <td>0.051088</td>\n      <td>0.016756</td>\n      <td>0.053871</td>\n      <td>0.019248</td>\n      <td>0.041221</td>\n      <td>0.025231</td>\n      <td>0.039109</td>\n      <td>0.026800</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>6</td>\n      <td>6;sk_Bacteria;k_;p_Proteobacteria;c_Alphaprote...</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.00000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.00000</td>\n      <td>...</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>10</td>\n      <td>10;sk_Bacteria;k_;p_Proteobacteria;c_Gammaprot...</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.00000</td>\n      <td>0.000017</td>\n      <td>0.000000</td>\n      <td>0.00000</td>\n      <td>...</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000201</td>\n      <td>0.000051</td>\n      <td>0.000145</td>\n      <td>0.000050</td>\n      <td>0.000123</td>\n      <td>0.000118</td>\n      <td>0.000088</td>\n      <td>0.000182</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>16</td>\n      <td>16;sk_Bacteria;k_;p_Proteobacteria;c_Betaprote...</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.00000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.00000</td>\n      <td>...</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>18</td>\n      <td>18;sk_Bacteria;k_;p_Proteobacteria;c_Deltaprot...</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.00000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.00000</td>\n      <td>...</td>\n      <td>0.000097</td>\n      <td>0.000219</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 183 columns</p>\n</div>\n```\n:::\n:::\n\n\n::: {#fafa032d .cell execution_count=7}\n``` {.python .cell-code}\nbeta = beta_diversity(metric, pivot.iloc[:, 2:].T)\nsns.heatmap(beta.to_data_frame(), vmin=0, vmax=1.0, cmap=\"viridis\")\n```\n\n::: {.cell-output .cell-output-display}\n![](abundance_tables_files/figure-html/cell-8-output-1.png){}\n:::\n:::\n\n\n### How do I evaluate difference between methods?\n\n",
    "supporting": [
      "abundance_tables_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}